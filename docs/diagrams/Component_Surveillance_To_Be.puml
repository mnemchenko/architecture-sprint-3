@startuml "SmartHomeSystem"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

AddElementTag("microService", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="micro service\neight sided")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")

System_Ext(devices, "Devices", "The actual smart home devices, such as sensors, thermostats, lights, and cameras")

System_Ext(web, "SmartHome Web Client", "Provides UI to user for smart home control and management capabilities")

System_Ext(s3, "S3-compatible Object Storage", "Stores video and snapshots from cameras")

System_Ext(cdn, "CDN", "Delivers static content fast around the world (frontend, video and snapshots)")

System_Boundary(c1, "SmartHome System") {
    Container(mqtt, "Low-level Pub/Sub Broker", "Eclipse Mosquitto MQTT Broker") {
        Component(mqttBroker, "Eclipse Mosquitto", "Message Broker")
        Component(mqttDevicesUpdate, "Device Access Update Consumer", "Consumer")
    }
    Container(broker, "Message Broker", "Apache Kafka broker", "") {
        Component(kafka, "Apache Kafka", "Message Broker")
        Component(mqttKafka, "Apache Kafka MQTT Connector", "Message Broker Connector")
        Component(mqttSinkKafka, "Apache Kafka MQTT Sink", "Message Broker Connector")
    }

    Container(ag, "API Gateway", "", "")

    Container(surveillanceControlService, "Surveillance Control Service", "Java", "", $tags="microService"){
        Component(surveillanceControlServiceGetVideoStreamSignedUrlController, "Get Video Stream Signed URL Controller", "REST API Controller")
        Component(surveillanceControlServiceGetVideoRecordsListController, "Get Video Records List Controller", "REST API Controller")
        Component(surveillanceControlServiceGetEventsListController, "Get Events List Controller", "REST API Controller", "Returns list of events surveillance like record started, moving in frame, etc.")
        Component(surveillanceControlServiceGetCameraListController, "Get Cameras List Controller", "REST API Controller")

        Component(surveillanceControlInfrastructureUpdatesConsumer, "Infrastructure Updates Consumer")
        Component(surveillanceControlUserAclUpdatesConsumer, "User Acl Updates Consumer")
    }
    ContainerDb(surveillanceDb, "Surveillance Database", "MongoDB", "Stores surveillance control events metadata and video records registry", $tags = "storage")
}

Rel(devices, mqttBroker, "Publish metrics data, state changes, etc.", "MQTT")
Rel(devices, mqttBroker, "Consume commands", "MQTT")

Rel(mqttKafka, kafka, "Publishes devices events")
Rel(mqttKafka, mqttBroker, "Consumes devices events")
Rel(mqttSinkKafka, mqttBroker, "Publish commands")
Rel(mqttSinkKafka, kafka, "Consumes commands")
Rel(mqttDevicesUpdate, kafka, "Consumes devices topology events")
Rel(mqttDevicesUpdate, mqttBroker, "Adds devices permissions based on events")

Rel(surveillanceControlInfrastructureUpdatesConsumer, kafka, "Consumes events")
Rel(surveillanceControlUserAclUpdatesConsumer, kafka, "Consumes events")
Rel(surveillanceControlServiceGetVideoStreamSignedUrlController, surveillanceDb, "Requests data from")
Rel(surveillanceControlServiceGetVideoRecordsListController, surveillanceDb, "Requests data from")
Rel(surveillanceControlServiceGetEventsListController, surveillanceDb, "Requests data from")
Rel(surveillanceControlServiceGetCameraListController, surveillanceDb, "Requests data from")
Rel(surveillanceControlUserAclUpdatesConsumer, surveillanceDb, "Saves data to")
Rel(surveillanceControlInfrastructureUpdatesConsumer, surveillanceDb, "Saves data to")

Rel(devices,s3,"Save video and snapshots")
Rel(cdn,s3,"Get originals")
Rel(surveillanceControlServiceGetVideoRecordsListController,cdn,"Signs url for getting snapshots")
Rel(surveillanceControlServiceGetVideoStreamSignedUrlController,cdn,"Signs url for getting video stream")

Rel(ag, surveillanceControlServiceGetVideoStreamSignedUrlController, "Requests data")
Rel(ag, surveillanceControlServiceGetVideoRecordsListController, "Requests data")
Rel(ag, surveillanceControlServiceGetEventsListController, "Requests data")
Rel(ag, surveillanceControlServiceGetCameraListController, "Requests data")

Rel(web, ag, "Perform commands")
Rel(web, ag, "Gets data")

@enduml